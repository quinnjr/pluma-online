// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator nestgraphql {
  provider               = "node node_modules/prisma-nestjs-graphql"
  output                 = "../server/@generated/prisma-graphql"
  reExport               = Directories
  purgeOutput            = true
  fields_Validator_from  = "class-validator"
  fields_Validator_input = true
}

enum Category {
  FileConverters
  StatsVisualizations
  Transformations
  Dissimilarity
  Correlation
  Centrality
  Clustering
  TimeSeries
  ExternalTools
  Miscellaneous
}

enum Language {
  CXX
  Python
  Perl
  CUDA
  R
}

model Plugin {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String   @unique
  category    Category
  description String
  githubUrl   String   @unique
  language    Language
  rating      Int      @default(0)
  author      User?    @relation(fields: [authorId], references: [id])
  authorId    String?  @db.Uuid
  isVerified  Boolean  @default(false)
  createdAt   DateTime @default(now()) @db.Timestamp(3)
  updatedAt   DateTime @default(now()) @updatedAt @db.Timestamp(3)

  @@map("plugins")
}

enum Role {
  Admin
  User
}

model User {
  id           String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email        String   @unique
  /// @HideField()
  passwordHash String
  name         String?
  website      String?
  role         Role     @default(User)
  createdAt    DateTime @default(now()) @db.Timestamp(3)
  updatedAt    DateTime @default(now()) @updatedAt @db.Timestamp(3)

  @@map("users")
  Plugin Plugin[]
}

enum PipelineStatus {
  Completed
  InProgress
  Future
}

model Pipeline {
  id          String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String         @unique
  description String
  githubUrl   String
  status      PipelineStatus @default(Completed)
  createdAt   DateTime       @default(now()) @db.Timestamp(3)
  updatedAt   DateTime       @default(now()) @updatedAt @db.Timestamp(3)

  @@map("pipelines")
}
